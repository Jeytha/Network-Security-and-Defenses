
# Enter the Docker container named 'host3-192.168.60.7' 
docker exec -it host3-192.168.60.7 bash 
# Inside the 'host3-192.168.60.7' container, 
run the 'netstat' command 
netstat -tuln		
# Enter the Docker container named 'host2-192.168.60.6' 
docker exec -it host2-192.168.60.6 bash 
# Inside the 'host2-192.168.60.6' container, 
run the 'netstat' command 
netstat -tuln
# Enter the Docker container named 'hosta-10.9.0.5' 
docker exec -it hosta-10.9.0.5 bash 
# Inside the 'hostA-10.9.0.5' container, 
run the 'netstat' command 
netstat -tuln
Run the boave on each host indivudally and understand their network settings. 

#Firewall rules setup
sudo iptables -A INPUT -p tcp --dport 23 -j REJECT 
#Block incoming and outgoing Telnet (port 23).

sudo iptables -A OUTPUT -p tcp --sport 23 -j REJECT 
#Allow incoming and outgoing HTTP (port 80) traffic, likely for a web server.
sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT 
sudo iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT 
#Allow incoming and outgoing SSH (port 22) traffic for remote administration.

sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT 
sudo iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT
#Allow incoming and outgoing TCP and UDP traffic on a wide range of high-numbered ports (ephemeral ports)

sudo iptables -A INPUT -p tcp --dport 32768:61000 -j ACCEPT
sudo iptables -A OUTPUT -p tcp --sport 32768:61000 -j ACCEPT
sudo iptables -A INPUT -p udp --dport 32768:61000 -j ACCEPT 
sudo iptables -A OUTPUT -p udp --sport 32768:61000 -j ACCEPT

Testing firewall policies functionality
#Navigating to http://10.9.0.5. You should see the web page served by the host
curl http://10.9.0.5
#Initiate an SSH (Secure Shell) connection to a remote server.
ssh root@10.9.0.5

